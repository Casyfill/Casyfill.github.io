<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A Pelican Blog</title><link href="/" rel="alternate"></link><link href="/feeds/all-en.atom.xml" rel="self"></link><id>/</id><updated>2016-04-21T00:00:00Z</updated><entry><title>Small memo on development of the package using conda, sphynx, and pyscaffold</title><link href="/CI%20on%20conda.html" rel="alternate"></link><updated>2016-04-21T00:00:00Z</updated><author><name></name></author><id>tag:,2016-04-21:CI on conda.html</id><summary type="html">&lt;p&gt;Creating a module might be tedious, especially if we want to test and document it. Fortunately, there is a large set of tools and services that helps us to copy with such a task, installed properly. In fact, once package deployed correctly, everything else is very simple.&lt;/p&gt;
&lt;p&gt;This memo is compiled partly from presentation and tutorial by Mohit Sharma, and several other sources, like &lt;a href="http://uoa-eresearch.github.io/eresearch-cookbook/recipe/2014/11/20/conda/"&gt;this&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;I. Creating conda environment&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;go to the project folder&lt;/li&gt;
&lt;li&gt;create env: &lt;code&gt;conda create -n yourenvname python=x.x anaconda&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;activate env: &lt;code&gt;source activate yourenvname&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;install packages: &lt;code&gt;conda install -n yourenvname [package]&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;sphinx: &lt;code&gt;conda install -n yourenvname sphinx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;pyscaffold: &lt;code&gt;conda install -n yourenvname -c https://conda.anaconda.org/ioos pyscaffold&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;setuptools: &lt;code&gt;conda install -n project setuptools&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also add &lt;a href="https://tox.readthedocs.org/en/latest/"&gt;Tox&lt;/a&gt; as integration.&lt;/p&gt;
&lt;h2&gt;II. Create sceleton&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;lets generate module seceleton directory: &lt;code&gt;putup -l 'mit' project  --with-travis&lt;/code&gt;. Skeleton in this case starts with git initialized and test folder preapared for Travis integration.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;III. Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;go to the folder&lt;/li&gt;
&lt;li&gt;run &lt;code&gt;sphinx-quickstart&lt;/code&gt; to generate html documentation&lt;/li&gt;
&lt;li&gt;more info &lt;a href="http://www.sphinx-doc.org/en/stable/tutorial.html"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;IV. Git Repository and Integration&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;now you can create repository on the gitHub and connect to local environment&lt;/li&gt;
&lt;li&gt;to syncronise your repo with travis, comment line31, 32 in &lt;code&gt;tests/travis_install.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;setup coverall&lt;/li&gt;
&lt;li&gt;enjoy (and start checking the documentation)&lt;/li&gt;
&lt;/ul&gt;</summary><category term="CI"></category><category term="travisCI"></category><category term="conda"></category><category term="pyscaffold"></category></entry></feed>